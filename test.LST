C51 COMPILER V9.01   TEST                                                                  07/19/2015 09:56:25 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN test.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE test.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /************************************************************************************/
   2          /* 实验平台：品诺电子C8051F340核心板
   3          /* 功能说明：1、串口波特率设置为115200，使用外部晶振22.1184MHz；
   4                                   2、按下S2则发送从串口发送"ABC"，同时点亮LED2；
   5                                   3、按下S3则发送从串口发送"abc"，同时点亮LED3。
   6          /* 作者信息：品诺电子(http://free-design.taobao.com)
   7          /************************************************************************************/
   8          
   9          #include "c8051f340.h"
  10          #include "def.h"
  11          #include "flash.h"
  12          #include <string.h>
  13          #include <stdlib.h>
  14          
  15          #define BAUDRATE 115200         //串口波特率，需要更改波特率时，在此更改数值即可
  16          #define SYSCLK 22118400UL       //采用外部晶振时，系统的时钟频率为22118400hz
  17          //#define SYSCLK  12000000UL
  18          
  19          
  20          #define BUFF_SIZE  100
  21          
  22          #define PNCNT  1        //现在存储的认识的手机号的数量
  23          
  24          //主循环定义的一些状态
  25          #define WAITING         0       //等待状态
  26          #define GETNEWMSG       1       //等待收到新的消息
  27          #define MSGCHECK    2   //对收到的信息进行检测
  28          #define SENDMSG         3       //发送短消息
  29          
  30          
  31          //===============================================================================================
  32          typedef struct
  33          {
  34                  uint8 PhoneNumber[12];  //11位号码+'\0'
  35                  uint8 Text[20]; //短信长度，先预设为20,实际短信可以70个汉字140个英文字母
  36          }SMS_t;
  37          
  38          //===============================================================================================
  39          static void Delay (unsigned int x);
  40          static void delay_1ms(unsigned int z);
  41          void InitOSC(void);
  42          void InitUart0(void);
  43          
  44          uint8 sim900a_send_cmd(uint8 *cmd, uint8 *ack, uint16 waittime);
  45          void send_byte(uint8 byte);
  46          uint8 AnalyzeMsg(uint8 index, uint8 mode, SMS_t *psms);
  47          
  48          //===============================================================================================
  49          
  50          sbit S2=P2^0;                   // S ='0' 表示按键被按下
  51          sbit S3=P2^1;                   // S ='0' 表示按键被按下
  52          
  53          sbit LED2=P2^2;                 // LED ='1' 表示亮灯，LED ='0' 表示灭灯
  54          sbit LED3=P2^3;                 // LED ='1' 表示亮灯，LED ='0' 表示灭灯
  55          
C51 COMPILER V9.01   TEST                                                                  07/19/2015 09:56:25 PAGE 2   

  56          bit uartSending=0;              //全局变量，标志串口是否正处于发送中(忙状态)
  57          
  58          uint8 xdata UART_RX_BUFF[BUFF_SIZE];
  59          uint8 xdata BuffIn = 0;
  60          
  61          uint8 xdata SMCnt[3];           //短信标号
  62          SMS_t xdata mysms;
  63          
  64          uint8 xdata FlashPN[12];
  65          
  66          //AT指令
  67          uint8 code ATD[] = {"ATD"};
  68          uint8 code AT[] = {"AT\r"}; 
  69          uint8 code AT_CMGF[] = {"AT+CMGF=1\r"};
  70          uint8 code AT_CSCS[] = {"AT+CSCS=\"GSM\"\r"};
  71          uint8 code AT_CNMI[] = {"AT+CNMI=2,1,\r"};
  72          uint8 code AT_Phone[] = {"AT+CMGS=\"15261172865\"\r"};
  73          uint8 code AT_Msg[]={'h','e','l','l','o',0x1A,'\r','\0'};
  74          uint8 code AT_CMGR[]={"AT+CMGR="};
  75          
  76          //表格
  77          uint8 code PhoneNumber1[] = {"15261172865"};    //预存的电话号码1
  78          
  79          uint8 * xdata PNList[PNCNT] = {PhoneNumber1};
  80          
  81          //一些标志位
  82          uint8 xdata MainStatus = WAITING;
  83          //===============================================================================================
  84          void Delay (unsigned int x)
  85          {
  86   1              while(--x);
  87   1      }
  88          
  89          void delay_1ms(unsigned int z) //延时函数
  90          {
  91   1              unsigned int x,y;
  92   1              for(x=z;x>0;x--)
  93   1                      for(y=110;y>0;y--);
  94   1      }
  95          
  96          void resetbuf(void)
  97          {
  98   1              uint8 i;
  99   1              for(i = 0; i < BUFF_SIZE; i++)
 100   1              {
 101   2                       UART_RX_BUFF[i] = 0;
 102   2              }
 103   1              BuffIn = 0;
 104   1      }
 105          /********************************************************************
 106          函数功能：将外部晶振配置为系统时钟。
 107          入口参数：无。
 108          返    回：无。
 109          备    注：无。
 110          ********************************************************************/
 111          void InitOSC(void)
 112          {
 113   1      /*
 114   1              P0MDIN &= ~0xC0;                //P0.6, P0.7配置为模拟输入，用作外部晶振
 115   1              P0SKIP |=  0xC0;                //交叉开关跳过P0.6, P0.7脚，用作外部晶振
 116   1      
 117   1              OSCXCN = (0x60 | 7);    //配置为外部晶体不分频，配置晶体频率为10M~30M
C51 COMPILER V9.01   TEST                                                                  07/19/2015 09:56:25 PAGE 3   

 118   1              Delay(1024);            //等待外部晶振开始工作，不可省略一定要做的步骤
 119   1              while (!(OSCXCN & 0x80));       //一直读取标志位，直到外部晶体稳定
 120   1              RSTSRC = 0x06;                  // Enable missing clock detector and VDD Monitor reset
 121   1      
 122   1              CLKSEL = 0x01;                  //选择外部晶体为时钟
 123   1              OSCICN = 0x00;                  //关闭内部晶振
 124   1      */
 125   1              OSCICN |= 0x03;
 126   1              RSTSRC  = 0x04;
 127   1      }
 128          //////////////////////////Pino Electronics///////////////////////////
 129          
 130          /********************************************************************
 131          函数功能：初始化串口0。
 132          入口参数：无。
 133          返    回：无。
 134          备    注：无。
 135          ********************************************************************/
 136          void InitUart0(void)
 137          {
 138   1              if (SYSCLK/BAUDRATE/2/256 < 1) {
 139   2                      TH1 = -(SYSCLK/BAUDRATE/2);
 140   2                      CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
 141   2                      CKCON |=  0x08;
 142   2              } else if (SYSCLK/BAUDRATE/2/256 < 4) {
 143   2                      TH1 = -(SYSCLK/BAUDRATE/2/4);
 144   2                      CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 01
 145   2                      CKCON |=  0x01;
 146   2              } else if (SYSCLK/BAUDRATE/2/256 < 12) {
 147   2                      TH1 = -(SYSCLK/BAUDRATE/2/12);
 148   2                      CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 00
 149   2              } else {
 150   2                      TH1 = -(SYSCLK/BAUDRATE/2/48);
 151   2                      CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 10
 152   2                      CKCON |=  0x02;
 153   2              }
 154   1      
 155   1              /*初始化定时器1*/
 156   1              TMOD|=0x20;                     //定时器1工作在8位自动重装方式
 157   1              TL1=0;
 158   1              TR1=1;
 159   1              
 160   1              /*初始化串口*/
 161   1              S0MODE=0;                       //8位的UART工作方式
 162   1              REN0=1;                         //接收允许
 163   1              PS0=1;                          //为了在中断里输出字符，串口的优先级设为最高
 164   1              ES0=1;                          //打开串口中断
 165   1      
 166   1              /*配置引脚*/
 167   1              P0MDOUT |= 0x10;        //串口TXD引脚配置为推挽输出方式，用于UART发送端
 168   1              XBR0|=0x01;                     //在外设连接寄存器0上把UART0连接到引脚P0.4和P0.5
 169   1      }
 170          
 171          
 172          /*
 173          *@fn    sim900a_send_cmd
 174          *
 175          *@brief    给sim900a发送一条指令
 176          *
 177          *@param    cmd:要发送到指令
 178          *@param    ack:指令返回的ack，OK,ERROR
 179          *@param    waittime:指令需要等待的大致时间，单位10ms
C51 COMPILER V9.01   TEST                                                                  07/19/2015 09:56:25 PAGE 4   

 180          *
 181          *@return   0:发送成功，1:发送失败
 182          */
 183          uint8 sim900a_send_cmd(uint8 *cmd, uint8 *ack, uint16 waittime)
 184          {
 185   1              uint8 res = 0;
 186   1              uint8 i = 0;
 187   1      
 188   1              //对cmd的检测,是否已'\r''\0'结尾。
 189   1              //如果这里输入的为一个不带'\0'结尾的字符，会出现什么情况？
 190   1              //如果输入的为'\0'，会出现什么情况？
 191   1              while(*(cmd + i) != '\0')
 192   1              {
 193   2                      i++;
 194   2              }
 195   1              if(*(cmd + i - 1) != '\r')
 196   1              {
 197   2                      res = 1;
 198   2                      return res;
 199   2              }
 200   1      
 201   1      
 202   1              resetbuf();
 203   1      
 204   1              while((*cmd) != '\0')
 205   1              {
 206   2                      send_byte(*cmd);
 207   2                      cmd++;
 208   2              }
 209   1              if(ack&&waittime)
 210   1              {
 211   2                      while(--waittime)
 212   2                      {
 213   3                              delay_1ms(10);
 214   3                              if(strstr(UART_RX_BUFF,ack))
 215   3                              {
 216   4                                      break;
 217   4                              }
 218   3                      }
 219   2                      if(waittime == 0)
 220   2                              res = 1;
 221   2              }
 222   1              return res;
 223   1      }
 224          
 225          
 226          /*
 227          *
 228          *send a byte to uart
 229          */
 230          void send_byte(uint8 byte)
 231          {
 232   1              while(uartSending); //等待发送完毕
 233   1              SBUF0=byte; //将数据写入到串口缓冲
 234   1              uartSending=1;   //设置发送标志 
 235   1      }
 236          
 237          
 238          /*
 239          *@fn    SendEnMessage
 240          *
 241          *@brief
C51 COMPILER V9.01   TEST                                                                  07/19/2015 09:56:25 PAGE 5   

 242          *
 243          *@param
 244          *
 245          *@return
 246          */
 247          
 248          void SendEnMessage(uint8 *phonenumber, uint8 *pText)
 249          {
 250   1      /*
 251   1      AT+CSCS="GSM"
 252   1      AT+CMGF=1
 253   1      AT+CMGS="15261172865"
 254   1      短信内容，以十六进制0x1A结束。
 255   1      */
 256   1              uint8 textend[3] = {0x1A,'\r','\0'};
 257   1              uint8 pnend[3] = {'"','\r','\0'};
 258   1      
 259   1              uint8 at_cmgs[22] = {"At+CMGS=\""};
 260   1      
 261   1              sim900a_send_cmd(AT_CSCS,"OK",50);
 262   1              sim900a_send_cmd("AT+CMGF=1\r","OK",50);
 263   1      
 264   1              strcat(at_cmgs,phonenumber);
 265   1              strcat(at_cmgs,pnend);
 266   1              sim900a_send_cmd(at_cmgs,"OK",50);
 267   1      
 268   1              strcat(pText,textend);
 269   1              sim900a_send_cmd(pText,"OK",50);
 270   1      }
 271          
 272          
 273          /*
 274          *@fn    CallUp
 275          *
 276          *@brief    给指定号码打电话   
 277          *
 278          *@param    
 279          *
 280          *@return
 281          *
 282          */
 283          /*
 284          void CallUp(uint8 *phonenumber)
 285          {
 286                  uint8 atd[17]= {'A','T','D','\0'};
 287          
 288                  strcat(atd,phonenumber);
 289                  strcat(atd,";\r");
 290                  
 291                  sim900a_send_cmd(atd,"OK",50);
 292          }
 293          */
 294          /*
 295          *@fn    AnalyzeMsg
 296          *
 297          *@brief:读取短信内容
 298          *
 299          *@param    index-短信编号
 300          *@param    mode-读取短信模式，0-正常，1-不改变指定消息记录状态
 301          *@param    psms,短信分析内容存储数据结构
 302          *
 303          *@return:       0-读取成功，1-读取失败 
C51 COMPILER V9.01   TEST                                                                  07/19/2015 09:56:25 PAGE 6   

 304          */
 305          uint8 AnalyzeMsg(uint8 index, uint8 mode, SMS_t *psms)
 306          {
 307   1      /*提取的短信内容格式如下：
 308   1      AT+CMGR=13,0
 309   1      
 310   1      +CMGR: "REC READ","+8615261172865","","15/07/11,20:52:52+32"
 311   1      hello
 312   1      */
 313   1              //AT+CMGR=xxx,0\r\0    长度：15
 314   1              uint8 at_cmgr[15] = {"AT+CMGR="};
 315   1              uint8 len[4];   //可能为3位数
 316   1              uint8 m[2];
 317   1              uint8 res = 0,i = 0;
 318   1              uint8 * ptr;
 319   1      
 320   1              len[0] = index/100 + 48; len[1] = (index/10)%10 + 48; len[2] = index%10 + 48; len[3] = '\0';
 321   1              m[0] = mode + 48; m[1] = '\0';
 322   1      
 323   1              strcat(at_cmgr,len);    //添加短信标识
 324   1              strcat(at_cmgr,",");
 325   1              strcat(at_cmgr,m);      //mode
 326   1              strcat(at_cmgr,"\r");   //这里不能使用单引号
 327   1      
 328   1              sim900a_send_cmd(at_cmgr,"OK",200);
 329   1              
 330   1              //等待sim900a返回短信内容
 331   1              while(1)
 332   1              {
 333   2                      if(strstr(UART_RX_BUFF,"OK"))
 334   2                      {
 335   3                              break;
 336   3                      }
 337   2                      if(strstr(UART_RX_BUFF,"ERROR"))
 338   2                      {
 339   3                              res = 1;
 340   3                              break;
 341   3                      }
 342   2              }
 343   1      
 344   1              if(res != 1)
 345   1              {
 346   2                      //获取号码
 347   2                      ptr = strstr(UART_RX_BUFF,","); //这里是按照我的标准，输入完整的查询短信命令
 348   2                      ptr = strstr(ptr+1,",");
 349   2                      ptr += 5;
 350   2              
 351   2                      //这里暂时只考虑了11位的手机号码的情况。对于错误输入没有进行判断,鲁棒性不佳
 352   2                      for(i = 0; i < 11; i++)
 353   2                      {
 354   3                              *(psms->PhoneNumber + i) = *(ptr + i);  
 355   3                      }
 356   2                      *(psms->PhoneNumber + i) = '\0';
 357   2      
 358   2                      //获取短信内容  
 359   2                      ptr = strrchr(UART_RX_BUFF,'"');        //查找UART中最后一个“号的位置
 360   2                      ptr += 3;i = 0;
 361   2                      
 362   2                      //这里对于短信的内容也没有进行一个严格的输入判断，存在风险
 363   2                      while(*(ptr + i) != 0x0D)
 364   2                      {
 365   3                              *(psms->Text + i) = *(ptr + i);
C51 COMPILER V9.01   TEST                                                                  07/19/2015 09:56:25 PAGE 7   

 366   3                              i++;
 367   3                      }
 368   2                      *(psms->Text + i) = '\0';
 369   2              }
 370   1              return res;     
 371   1      }
 372          
 373          /*
 374          *@fn  CheckPN_MSG
 375          *
 376          *@brief  检测手机号码是否符合要求
 377          *
 378          *@param   手机号码
 379          *
 380          *@return    0:成功，1：失败
 381          */
 382          uint8 CheckPN_MSG(uint8 *phonenumber)
 383          {
 384   1              uint8 res = 0;
 385   1              uint8 i,cmpres = 1;
 386   1      
 387   1              //手机号比对
 388   1              for(i = 0; i < PNCNT; i++)
 389   1              {
 390   2                      cmpres = strcmp(phonenumber,PNList[i]);
 391   2                      if(cmpres == 0)
 392   2                              break;
 393   2              }
 394   1      
 395   1              if(cmpres != 0)
 396   1              {
 397   2                      res = 1;
 398   2              }
 399   1      
 400   1              return res;
 401   1      }
 402          int main(void)
 403          {
 404   1              bit key2_down_flag=0;
 405   1              bit key3_down_flag=0;
 406   1              uint8 i = 0,tmpres;
 407   1              uint8 *smflag = NULL;
 408   1              uint8 xdata array[] = {"I'm sim900a"};
 409   1              
 410   1      
 411   1              //uint8 callflag = 0;
 412   1              
 413   1      
 414   1      
 415   1              PCA0MD &= ~0x40;        //WDTE = 0 关闭看门狗，上电默认打开
 416   1              EA=0;
 417   1      
 418   1              /*配置引脚*/
 419   1              P2MDOUT=0xC;            //P2.2和P2.3设为推挽输出方式，用于点亮LED
 420   1              XBR1= 0x40;                     //打开交叉开关，使能弱上拉，要使GPIO生效，必须打开交叉开关
 421   1      
 422   1              InitOSC();                      //外部晶振配置
 423   1              InitUart0();            //初始化串口
 424   1              EA=1;                           //允许所有中断  
 425   1              
 426   1              
 427   1              sim900a_send_cmd(AT_CMGF,"OK",50);//设置为文本模式       
C51 COMPILER V9.01   TEST                                                                  07/19/2015 09:56:25 PAGE 8   

 428   1              sim900a_send_cmd(AT_CSCS,"OK",50);//设置GSM字符集
 429   1              sim900a_send_cmd(AT_CNMI,"OK",50);//设置新消息提示
 430   1              delay_1ms(500); 
 431   1              
 432   1              
 433   1      
 434   1              //AnalyzeMsg(40,0,&mysms);
 435   1              //SendEnMessage(mysms.PhoneNumber,mysms.Text);  //发送一条英文短信
 436   1              while (1)
 437   1              {
 438   2                       
 439   2                      switch(MainStatus)
 440   2                      {
 441   3                              case WAITING://检测是否有短信发送过来  //提示内容eg:+CMTI: "SM",14
 442   3                                      smflag = strstr(UART_RX_BUFF,"SM");
 443   3                                      delay_1ms(100);
 444   3                                      if(smflag != NULL)
 445   3                                      {
 446   4                                              MainStatus = GETNEWMSG;
 447   4                                      }
 448   3                                      break;
 449   3                              case GETNEWMSG:
 450   3                                      SMCnt[0] = *(smflag + 4);//记录下短信编号
 451   3                                      SMCnt[1] = *(smflag + 5);
 452   3                                      SMCnt[2] = '\0';
 453   3                                      AnalyzeMsg((uint8)atoi(SMCnt),0,&mysms);
 454   3                                      MainStatus = MSGCHECK;
 455   3                                      break;
 456   3                              case MSGCHECK:
 457   3                                      tmpres = CheckPN_MSG(mysms.PhoneNumber);
 458   3                                      
 459   3                                      if(tmpres == 0)
 460   3                                      {
 461   4                                              //存储电话号码到flash
 462   4                                              FLASH_PageErase(0x8000);
 463   4                                              FLASH_StringWrite(0x8000,mysms.Text,sizeof(mysms.Text));
 464   4                                      }
 465   3                                      else
 466   3                                      {
 467   4                                              mysms.Text[0] = 'E';mysms.Text[1] = 'R';mysms.Text[2] = 'R';mysms.Text[3] = 'O';mysms.Text[4] = 'R';m
             -ysms.Text[5] = '\0';
 468   4                                      }
 469   3      
 470   3                                      MainStatus = SENDMSG;
 471   3                                      break;
 472   3                              case SENDMSG:
 473   3                                      //SendEnMessage(mysms.PhoneNumber,mysms.Text);  //发送一条英文短信
 474   3                                      for(i = 0; i < 12; i++)
 475   3                                      {
 476   4                                              FlashPN[i] = FLASH_ByteRead(0x8000+i);
 477   4                                      }
 478   3                                      FlashPN[i] = '\0';
 479   3                                      SendEnMessage(FlashPN,array);
 480   3                                      MainStatus = WAITING;
 481   3                                      resetbuf();
 482   3                                      break;
 483   3                              default:
 484   3                                      break;
 485   3                      }
 486   2                       
 487   2                      //按键s2
 488   2                      if (S2 == 0)
C51 COMPILER V9.01   TEST                                                                  07/19/2015 09:56:25 PAGE 9   

 489   2                      {
 490   3                              Delay(3000);
 491   3                              if(S2 == 0)
 492   3                              {
 493   4                                      if(key2_down_flag == 0)
 494   4                                      {
 495   5                                              LED2^=1;
 496   5                                              
 497   5                                              for(i = 0; i < 12; i++)
 498   5                                              {
 499   6                                                      FlashPN[i] = FLASH_ByteRead(0x8000+i);
 500   6                                              }
 501   5                                              FlashPN[i] = '\0';
 502   5                                              SendEnMessage(FlashPN,array);
 503   5                                              
 504   5                                              key2_down_flag = 1;
 505   5                                      }
 506   4                              } 
 507   3                      }
 508   2                      else
 509   2                      {
 510   3                              key2_down_flag = 0;
 511   3                      }
 512   2      
 513   2                      //按键s3
 514   2                      if (S3 == 0)
 515   2                      {
 516   3                              Delay(3000);
 517   3                              if(S3 == 0)
 518   3                              {
 519   4                                      if(key3_down_flag == 0)
 520   4                                      {
 521   5                                              for(i = 0; i < 10; i++)
 522   5                                              {
 523   6                                                      send_byte(UART_RX_BUFF[i]);
 524   6                                              }
 525   5                                              i = 0;
 526   5                                              key3_down_flag = 1;
 527   5                                      }
 528   4                              }
 529   3                      }
 530   2                      else
 531   2                      {
 532   3                              key3_down_flag = 0;
 533   3                      }
 534   2              }// end of while(1)   
 535   1              
 536   1              return 0;                 
 537   1      }
 538          //////////////////////////Pino Electronics///////////////////////////
 539          
 540          /********************************************************************
 541          函数功能：串口中断处理。
 542          入口参数：无。
 543          返    回：无。
 544          备    注：无。
 545          ********************************************************************/
 546          /*串口中断服务程序*/
 547          void Uart0ISR(void) interrupt 4 
 548          {
 549   1              if(RI0 == 1)
 550   1              {
C51 COMPILER V9.01   TEST                                                                  07/19/2015 09:56:25 PAGE 10  

 551   2                      RI0 = 0;
 552   2                      UART_RX_BUFF[BuffIn] =  SBUF0;
 553   2                      BuffIn = (BuffIn + 1)%BUFF_SIZE;
 554   2              }
 555   1              if(TI0 ==1)     //发送数据
 556   1              {
 557   2                      TI0 = 0;
 558   2                      uartSending = 0;
 559   2              }
 560   1      }                    
 561          //////////////////////////Pino Electronics///////////////////////////


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1598    ----
   CONSTANT SIZE    =    182    ----
   XDATA SIZE       =    152      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      83
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
